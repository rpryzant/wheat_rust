setwd('~/Dropbox/school/ermon_lab/2_peakDif_classifier')
data = read.csv("test.csv")
View(data)
train = data[1:7000,]
test = data[7001:7061,]
level(train)
train
head(train)
model <- glm(diseased ~ sur_refl_b01+sur_refl_b02+sur_refl_b03+sur_refl_b04+sur_refl_b05+sur_refl_b06+sur_refl_b07,family=binomial(link='logit'),data=train)
summary(model)
fitted.results <- predict(model,newdata=subset(test,select=c(9,10,11,12,13,14)),type='response')
subset(test,select=c(2,3,4,5,6,7,8,9))
subset(test,select=c(2,3,4,5,6,7,8))
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
fitted.results
View(data)
library(readr)
library(Rtsne)
install.packages("readr")
install.packages("Rtsne")
train[,-1]
head(train[,-1])
#set.seed(1) # for reproducibility
tsne <- Rtsne(train[,-1], dims = 2, perplexity=30, verbose=TRUE, max_iter = 500)
# visualizing
colors = rainbow(length(unique(train$diseased)))
names(colors) = unique(train$diseased)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=train$diseased, col=colors[train$diseased])
tsne <- Rtsne(train[,-1], dims = 2, perplexity=30, verbose=TRUE, max_iter = 500)
library(Rtsne)
tsne <- Rtsne(train[,-1], dims = 2, perplexity=30, verbose=TRUE, max_iter = 500)
View(train)
duplicates(train)
duplicated(train)
train[1:10,-1]
tsne <- Rtsne(train[1:10,-1], dims = 2, perplexity=30, verbose=TRUE, max_iter = 500)
?Rtsne
tsne <- Rtsne(train[1:10,-1], dims = 2, perplexity=10, verbose=TRUE, max_iter = 500)
tsne <- Rtsne(train[1:10,-1], dims = 2, perplexity=1, verbose=TRUE, max_iter = 500)
# visualizing
colors = rainbow(length(unique(train$diseased)))
names(colors) = unique(train$diseased)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=train$diseased, col=colors[train$diseased])
tsne <- Rtsne(train[1:10,-1], dims = 2, perplexity=5, verbose=TRUE, max_iter = 500)
train[1:10, -1]
tsne <- Rtsne(train[,-1], dims = 2, perplexity=5, verbose=TRUE, max_iter = 500)
data = read.csv("test2.csv")
N = nrow(data)
train = data[1:(N - N/10),]
test = data[(N - N/10:,]
test = data[(N - N/10):,]
train = data[1:(N - N/10),]
test = data[(N - N/10):,]
test = data[(N - N/10):N,]
train = data[1:(N - N/10),]
test = data[(N - N/10):N,]
model <- glm(diseased ~ sur_refl_b01+sur_refl_b02+sur_refl_b03+sur_refl_b04+sur_refl_b05+sur_refl_b06+sur_refl_b07,family=binomial(link='logit'),data=train)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
fitted.results
test
data = data[sample(nrow(data)),]
data = data[sample(nrow(data)),]
data = data[sample(nrow(data)),]
View(data)
N = nrow(data)
train = data[1:(N - N/10),]
test = data[(N - N/10):N,]
model <- glm(diseased ~ sur_refl_b01+sur_refl_b02+sur_refl_b03+sur_refl_b04+sur_refl_b05+sur_refl_b06+sur_refl_b07,family=binomial(link='logit'),data=train)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
fitted.results
test
# using tsne
#set.seed(1) # for reproducibility
tsne <- Rtsne(train[,-1], dims = 2, perplexity=30, verbose=TRUE, max_iter = 500)
# visualizing
colors = rainbow(length(unique(train$diseased)))
names(colors) = unique(train$diseased)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=train$diseased, col=colors[train$diseased])
unique(train$diseased)
rainbow(length(unique(train$diseased)))
tsne
train
tsne <- Rtsne(train[,-1], dims = 2, perplexity=30, verbose=TRUE, max_iter = 500)
train[-1]
duplicated(data)
tsne <- Rtsne(train[,-1], dims = 2, perplexity=30, verbose=TRUE, max_iter = 500)
tsne <- Rtsne(train[,-1], dims = 2, perplexity=30, verbose=TRUE,check_duplicates = FALSE, max_iter = 500)
# visualizing
colors = rainbow(length(unique(train$diseased)))
names(colors) = unique(train$diseased)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=train$diseased, col=colors[train$diseased])
colors = rainbow(length(unique(train$diseased)))
colors
colors[0]
colors[1]
colors[2]
colors = rainbow(length(unique(train$diseased)))
names(colors) = unique(train$diseased)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=train$diseased, col=colors[train$diseased + 1])
#set.seed(1) # for reproducibility
tsne <- Rtsne(train[,-1], dims = 2, perplexity=20, verbose=TRUE,check_duplicates = FALSE, max_iter = 500)
# visualizing
colors = rainbow(length(unique(train$diseased)))
names(colors) = unique(train$diseased)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=train$diseased, col=colors[train$diseased + 1])
model <- glm(diseased ~ sur_refl_b01+sur_refl_b02+sur_refl_b03+sur_refl_b04+sur_refl_b05+sur_refl_b06+sur_refl_b07,family=binomial(link='logit'),data=train)
fitted.results <- predict(model,newdata=subset(test,select=c(2,3,4,5,6,7,8)),type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)
tsne <- Rtsne(train[,-1], dims = 2, perplexity=5, verbose=TRUE,check_duplicates = FALSE, max_iter = 500)
# visualizing
colors = rainbow(length(unique(train$diseased)))
names(colors) = unique(train$diseased)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=train$diseased, col=colors[train$diseased + 1])
tsne <- Rtsne(train[,-1], dims = 2, perplexity=10, verbose=TRUE,check_duplicates = FALSE, max_iter = 500)
# visualizing
colors = rainbow(length(unique(train$diseased)))
names(colors) = unique(train$diseased)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=train$diseased, col=colors[train$diseased + 1])
tsne <- Rtsne(train[,-1], dims = 2, perplexity=20, verbose=TRUE,check_duplicates = FALSE, max_iter = 500)
# visualizing
colors = rainbow(length(unique(train$diseased)))
names(colors) = unique(train$diseased)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=train$diseased, col=colors[train$diseased + 1])
tsne <- Rtsne(train[,-1], dims = 2, perplexity=30, verbose=TRUE,check_duplicates = FALSE, max_iter = 500)
# visualizing
colors = rainbow(length(unique(train$diseased)))
names(colors) = unique(train$diseased)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=train$diseased, col=colors[train$diseased + 1])
tsne <- Rtsne(train[,-1], dims = 2, perplexity=40, verbose=TRUE,check_duplicates = FALSE, max_iter = 500)
# visualizing
colors = rainbow(length(unique(train$diseased)))
names(colors) = unique(train$diseased)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=train$diseased, col=colors[train$diseased + 1])
setwd('~/Dropbox/school/ermon_lab/2_peakDif_classifier')
data = read.csv("threshold_2_stemStripe.csv")
library(readr)
library(Rtsne)
tsne <- Rtsne(train[,-1], dims = 2, perplexity=40, verbose=TRUE,check_duplicates = FALSE, max_iter = 2000)
# visualizing
colors = rainbow(length(unique(train$diseased)))
names(colors) = unique(train$diseased)
plot(tsne$Y, t='n', main="tsne")
text(tsne$Y, labels=train$diseased, col=colors[train$diseased + 1])
